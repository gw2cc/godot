<?xml version="1.0" encoding="UTF-8" ?>
<class name="VisualShaderNodeCustom" inherits="VisualShaderNode" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../class.xsd">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_get_category" qualifiers="virtual const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="_get_code" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="input_vars" type="String[]" />
			<param index="1" name="output_vars" type="String[]" />
			<param index="2" name="mode" type="int" enum="Shader.Mode" />
			<param index="3" name="type" type="int" enum="VisualShader.Type" />
			<description>
			</description>
		</method>
		<method name="_get_default_input_port" qualifiers="virtual const">
			<return type="int" />
			<param index="0" name="type" type="int" enum="VisualShaderNode.PortType" />
			<description>
				Override this method to define the input port which should be connected by default when this node is created as a result of dragging a connection from an existing node to the empty space on the graph.
				Defining this method is [b]optional[/b]. If not overridden, the connection will be created to the first valid port.
			</description>
		</method>
		<method name="_get_description" qualifiers="virtual const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="_get_func_code" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="mode" type="int" enum="Shader.Mode" />
			<param index="1" name="type" type="int" enum="VisualShader.Type" />
			<description>
			</description>
		</method>
		<method name="_get_global_code" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="mode" type="int" enum="Shader.Mode" />
			<description>
			</description>
		</method>
		<method name="_get_input_port_count" qualifiers="virtual const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="_get_input_port_default_value" qualifiers="virtual const">
			<return type="Variant" />
			<param index="0" name="port" type="int" />
			<description>
				Override this method to define the default value for the specified input port. Prefer use this over [method VisualShaderNode.set_input_port_default_value].
				Defining this method is [b]required[/b]. If not overridden, the node has no default values for their input ports.
			</description>
		</method>
		<method name="_get_input_port_name" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="port" type="int" />
			<description>
			</description>
		</method>
		<method name="_get_input_port_type" qualifiers="virtual const">
			<return type="int" enum="VisualShaderNode.PortType" />
			<param index="0" name="port" type="int" />
			<description>
			</description>
		</method>
		<method name="_get_name" qualifiers="virtual const">
			<return type="String" />
			<description>
			</description>
		</method>
		<method name="_get_output_port_count" qualifiers="virtual const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="_get_output_port_name" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="port" type="int" />
			<description>
			</description>
		</method>
		<method name="_get_output_port_type" qualifiers="virtual const">
			<return type="int" enum="VisualShaderNode.PortType" />
			<param index="0" name="port" type="int" />
			<description>
			</description>
		</method>
		<method name="_get_property_count" qualifiers="virtual const">
			<return type="int" />
			<description>
				Override this method to define the number of the properties.
				Defining this method is [b]optional[/b].
			</description>
		</method>
		<method name="_get_property_default_index" qualifiers="virtual const">
			<return type="int" />
			<param index="0" name="index" type="int" />
			<description>
				Override this method to define the default index of the property of the associated custom node.
				Defining this method is [b]optional[/b].
			</description>
		</method>
		<method name="_get_property_name" qualifiers="virtual const">
			<return type="String" />
			<param index="0" name="index" type="int" />
			<description>
				Override this method to define the names of the property of the associated custom node.
				Defining this method is [b]optional[/b].
			</description>
		</method>
		<method name="_get_property_options" qualifiers="virtual const">
			<return type="PackedStringArray" />
			<param index="0" name="index" type="int" />
			<description>
				Override this method to define the options inside the drop-down list property of the associated custom node.
				Defining this method is [b]optional[/b].
			</description>
		</method>
		<method name="_get_return_icon_type" qualifiers="virtual const">
			<return type="int" enum="VisualShaderNode.PortType" />
			<description>
			</description>
		</method>
		<method name="_is_available" qualifiers="virtual const">
			<return type="bool" />
			<param index="0" name="mode" type="int" enum="Shader.Mode" />
			<param index="1" name="type" type="int" enum="VisualShader.Type" />
			<description>
			</description>
		</method>
		<method name="_is_highend" qualifiers="virtual const">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="get_option_index" qualifiers="const">
			<return type="int" />
			<param index="0" name="option" type="int" />
			<description>
				Returns the selected index of the drop-down list option within a graph. You may use this function to define the specific behavior in the [method _get_code] or [method _get_global_code].
			</description>
		</method>
	</methods>
</class>
