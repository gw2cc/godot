#!/usr/bin/env python

Import("env")

import os
from platform_methods import run_in_subprocess
import platform_linuxbsd_builders

common_linuxbsd = [
    "crash_handler_linuxbsd.cpp",
    "os_linuxbsd.cpp",
    "joypad_linux.cpp",
    "freedesktop_portal_desktop.cpp",
    "freedesktop_screensaver.cpp",
]

if env["use_sowrap"]:
    common_linuxbsd.append("xkbcommon-so_wrap.c")

if env["x11"]:
    common_linuxbsd += SConscript("x11/SCsub")

if env["speechd"]:
    common_linuxbsd.append("tts_linux.cpp")
    if env["use_sowrap"]:
        common_linuxbsd.append("speechd-so_wrap.c")

if env["fontconfig"]:
    if env["use_sowrap"]:
        common_linuxbsd.append("fontconfig-so_wrap.c")

if env["udev"]:
    if env["use_sowrap"]:
        common_linuxbsd.append("libudev-so_wrap.c")

if env["dbus"]:
    if env["use_sowrap"]:
        common_linuxbsd.append("dbus-so_wrap.c")


linuxbsd_lib = env.add_library("linuxbsd", ["godot_linuxbsd.cpp"] + common_linuxbsd)
env.Prepend(LIBS=[linuxbsd_lib])

# remove system libs
godot_libs = [l for l in env['LIBS'] if not isinstance(l, str)]

with open("../../godot_libs.cmake", "w") as f:
    f.write("set(GODOT_LIBS\n")
    for lib in godot_libs + [linuxbsd_lib]:
        for l in lib:
            if "module_gw2cc" in l.name:
                continue
            f.write("    \"" + l.get_abspath().replace("\\", "/") + "\"\n")
    f.write(")\n")

if env["debug_symbols"] and env["separate_debug_symbols"]:
    env.AddPostAction(linuxbsd_lib, run_in_subprocess(platform_linuxbsd_builders.make_debug_linuxbsd))
